<style lang="less">
    @import './style/weui.less';
    .container{
        width: 100vw;
        height: 100vh;
        background-color: #F7F7F7;
        display: flex;
        justify-content: flex-start;
        align-items: center;
        flex-direction: column;
    }

    /**
    通用按钮样式
     */
    .btn_common{
        font-size: 34rpx;
        display: flex;
        justify-content: center;
        align-items: center;
        color: #fff;
        border-radius: 8rpx;
        background-color: #EA5541;
        width: 512rpx;
        height: 88rpx;
    }

    text{
        font-size: 24rpx;
        text-align: center;
        color: #333333;
    }
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
        'pages/share/share',
        'pages/mine/mine',
        'pages/mall/malldetail',
        'pages/share/sharerules',
        'pages/mine/order'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTextStyle: 'black',
        navigationBarTitleText:'测试小程序'
    },

      /**
       * 底部tabbar配置
       */
      "tabBar": {
          "selectedColor": "#EA5514",
          "list": [{
              "pagePath": "pages/index",
              "text": "商城",
              "iconPath": "images/home/icon_mall.png",
              "selectedIconPath": "images/home/icon_mall_selected.png"
          },{
              "pagePath": "pages/share/share",
              "text": "推广",
              "iconPath": "images/home/icon_share.png",
              "selectedIconPath": "images/home/icon_share_selected.png"
          },{
              "pagePath": "pages/mine/mine",
              "text": "我的",
              "iconPath": "images/home/icon_myself.png",
              "selectedIconPath": "images/home/icon_myself_selected.png"
          }]
      }

  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
